---
title:  "Chapter One Page 2"
pdf: "/pdfs/chapterOne.pdf"
chapter: 1
page: 2
layout: fourohfour
active: true
sections:
  - paragraphs:
      - subTitle: "Integrated Circuit"
        text: Another major development occurred about ten years later when the <a href="https://en.wikipedia.org/wiki/Invention_of_the_integrated_circuit" target="_blank">integrated circuit (IC) was invented</a>. Now, instead of clunky assemblages of transistors, it was possible to pack a huge number of transistors onto a single chip, which meant a faster, smaller component and the possibility of cheap mass production. Over time, ICs have become even more powerful as they gave way to tiny, resilient silicon-based circuits that could be designed as any type of circuitry. These integrated circuits can be found in a majority of our most commonly used electronics.
      - text: Another industry standard of sorts that emerged around this time is the central processing unit (CPU), often referred to as ‘von Neumann architecture’ after the mathematician who came up with the design. Instead of the physical distinction between hardware and software, the CPU designates one and the same space to hold the data and execute the software. This means that the code (i.e. the instructions) is equivalent to the data itself. These cumulative discoveries and iterations led to the accelerated evolution of digital computers.
      - text: These significant advancements are driven by military industrial agendas, no question. But is it possible to imagine a different relationship with computers? What are some clues to undo that damaging legacy? Perhaps some clues reside in the poetics of computers, so let’s investigate that.
      - text: For a more detailed and technical overview of the computer’s development and internal workings, refer to <span class="italic">Handmade Computer</span>.
  - title: "Poetics: Abstraction and Repetition"
    paragraphs: 
      - text: ""
        inlineImage: 
          - src: "chapter-1/image8.jpg"
            caption: "Image: Via @ <a href='http://www.peterhalley.com/ARTISTS/PETER.HALLEY/1995-99.Index.html'>Peter Halley</a>, installation view"
      - text: Consider this abstract painting by Peter Halley, a microscopic image of an Integrated Circuit, and the CPU diagram. I find common visual qualities in these three images, aesthetic qualities that are influenced by an ethos of industrialization. These images are characterized by a certain type of repetition and abstraction. Repetition is a powerful way to perform complex tasks by breaking them down into a series of a simple operations, enabling a basic pattern to scale to larger, more abstract and complex structures. We might note that repetition is also an essential technique of poetry. The images, in their abstraction, also hold a sense of the sublime for me. The sublime is the experience of something that is beyond judgment, such as having a transcendent encounter with nature. This sublime elegance in computation propelled me to ask if we could use these aesthetics to envision a different narrative of technology?
        image: 
          - src: "chapter-1/image2.jpg"
            caption: "Flip-Flop Circuit in an Integrated Circuit: Via @ <a href='http://smithsonianchips.si.edu/augarten/i18.htm'>Smithsonian</a>"
      - text: All of us here are very friendly with technology. We like technology or are very curious about it, but we are a very particular group of people. The rest of the world depends on computational technology but often takes it for granted. Even in developing parts of the world, cell phones and different modes of transportation have computation inside of them. Our lives are stored in bits in computational memory. The way we communicate is always mediated through some sort of network, and I like to think of the spaces we inhabit as living sized pixels. We occupy some pixels in the world, known as the whole world, and we occupy some pixels in a computer, which is known as a world.
      - text: I was thinking about what is behind the interface. What is happening behind the glossy screen? I started looking at CPU structures as research. CPUs embody a lot of the ideas that we are talking about as well as the history of computation. What is both amazing and frightening about the computer is that it’s just binary numbers and logics at its core. It’s all zeros and ones, but we are still able to experience and communicate the conditions between zeros and ones. This is important because the world is not completely dark or completely light, it’s always in between, it’s always in transition. How can we communicate the dawn and the dusk? And the seasons between spring and summer? The emotions that we don’t have words for? All this in between stuff that makes us who we are, that makes the world what it is. How can computation simulate that? Or does it fail to do this and it is our imagination that completes it? 
      - text: When we started the school I started making a computer by hand. I had some experience with code and microcontrollers like <a href="https://www.arduino.cc/" target="_blank">Arduino</a>, but I didn’t like using them because it was still a black box and it was hard to understand what was actually happening. So I started making computers from scratch. I made them from wood, paper, and eletronics, and I really enjoyed it.
        inlineImage: 
          - src: "chapter-1/image6.jpg"
            caption: "Handmade Computer, Taeyoon Choi, 2015"
      - text: "Last year I exhibited the process of making a handmade computer as an artwork. This is a 64 Bit RAM and 10 step counter, so it is cycling through ten states and you can encode four bits of information and recall them. It’s the first computer I built that I can say is my design because before then I was just copying the history of computer design. Handmade computers is how I approach computation. What makes a computer so powerful is that it doesn’t mind repeating the small tasks, whereas we humans get bored and tired so easily. Working on the Handmade Computer project, I had to endure repetitive soldering and wiring. In a sense, the laborious process was a search for the poetics of computation."
      - text: "Again, what is the <span class='italic'>poetics of computation</span>? The origin of the word <span class='italic'>poetics</span> is Poïesis, which means to create and give form. What is the form of computer? What factors were in place to give this particular form to it? Perhaps by making a computer by hand, we can think about the <span class='italic'>poetic effect of computation</span>. How can computers create the varying senses of time coexisting in a space? Can we consider code as language rather than technology? After all, computation is not merely a technological subject, but a kind of medium and spirit that runs contemporary society. I will explore the concepts of poetic computation throughout the lectures, and especially in Lecture 5 on Translation. For now, I’d like to steer our conversation toward the question of the politics of code."

---
